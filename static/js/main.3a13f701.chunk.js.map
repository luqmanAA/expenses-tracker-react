{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","random","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3a13f701.chunk.js","sourcesContent":["import \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>#{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nimport './ExpensesList.css';\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={Math.random()}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); //Starting at 0, i.e Jan. = 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nimport './Expenses.css';\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: '',\r\n  //     enteredAmount: '',\r\n  //     enteredDate: '',\r\n  //   });\r\n  const titleChangeHandler = (event) => {\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    //best alternative to use one state for multiple input\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n    // console.log(userInput.enteredTitle);\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n    // console.log(userInput.enteredAmount);\r\n\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n    // console.log(userInput.enteredDate);\r\n\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.10'\r\n            step='0.10'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n  return (\r\n    <div className='new-expense'>\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 299.99,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 199999.99,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 49999.99,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 39999.99,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}